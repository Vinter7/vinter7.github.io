import{_ as i,r as u,o as r,c as d,a as n,b as o,d as s,e}from"./app.d5c6f758.js";const k=n("h1",{id:"\u57FA\u7840\u8BED\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u57FA\u7840\u8BED\u6CD5","aria-hidden":"true"},"#"),s(" \u57FA\u7840\u8BED\u6CD5")],-1),v={href:"https://zh.javascript.info/",target:"_blank",rel:"noopener noreferrer"},m=s("JavaScript\u53C2\u8003"),b=e(`<hr><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h2><ul><li>\u79CD\u7C7B <ul><li>number bigint string boolean null undefined symbol object</li><li><code>typeof x</code></li><li>\u539F\u59CB\u7C7B\u578B\u7684\u65B9\u6CD5 <ul><li>\u901A\u8FC7\u5BF9\u8C61\u5305\u88C5\u5668\u5B9E\u73B0</li><li><code>null/undefined</code> \u6CA1\u6709\u5305\u88C5\u5668\u4E5F\u6CA1\u6709\u4EFB\u4F55\u65B9\u6CD5</li><li>\u4F7F\u7528\u540E\u9500\u6BC1</li></ul></li></ul></li><li>\u8F6C\u6362 <ul><li>\u8F6C\u5B57\u7B26\u4E32 <ul><li><code>String(value)</code></li><li><code>num+&#39;&#39;</code></li></ul></li><li>\u8F6C\u6570\u5B57 <ul><li><code>Number(str)</code></li><li><code>+str</code></li><li>undefined -&gt; NaN</li><li>null -&gt; 0</li><li>true/false -&gt; 1/0</li><li>str -&gt; number 0 NaN</li></ul></li><li>\u8F6C\u5E03\u5C14 <ul><li><code>Boolean()</code></li><li><code>!!value</code></li><li>0/null/undefined/NaN/&#39;&#39; -&gt; false</li></ul></li></ul></li><li>\u8FD0\u7B97 <ul><li><code>+ - * / % **</code></li><li><code>+= ++i i++ ,</code></li><li><code>boolean ? true() : false()</code></li><li><code>|| &amp;&amp; ! ??</code><ul><li><code>||</code> \u8FD0\u7B97\u5230\u7B2C\u4E00\u4E2A\u771F\u503C\u8FD4\u56DE</li><li><code>&amp;&amp;</code> \u8FD0\u7B97\u5230\u7B2C\u4E00\u4E2A\u5047\u503C\u8FD4\u56DE</li><li><code>??</code> \u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5DF2\u5B9A\u4E49\u503C <ul><li>\u7C7B\u4F3C<code>||</code></li><li>\u5E38\u7528\u4E8E\u8BBE\u5B9A\u9ED8\u8BA4\u503C</li></ul></li></ul></li></ul></li><li>\u6BD4\u8F83 <ul><li>0 == false \u221A</li><li>null==undefined \u221A \u4ED6\u4EEC\u53EA\u7B49\u4E8E\u5BF9\u65B9\u548C\u81EA\u5DF1</li><li>null &gt;= 0 \u221A</li><li>NaN \u548C\u8C01\u90FD\u662F false</li></ul></li></ul><h2 id="\u6D41\u7A0B\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u63A7\u5236" aria-hidden="true">#</a> \u6D41\u7A0B\u63A7\u5236</h2><ul><li><code>if(){}else if{}else{}</code></li><li><code>while(){}</code></li><li><code>do{}while()</code></li><li><code>for(;;){}</code></li><li><code>break</code> <code>continue</code></li><li><code>labelNAme:while(for(){break labelNAme})</code> \u76F4\u63A5\u8DF3\u51FA\u5D4C\u5957\u5FAA\u73AF\u5230\u6807\u7B7E\u5904</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token string">&#39;0&#39;</span><span class="token operator">:</span>
  <span class="token keyword">case</span> <span class="token string">&#39;1&#39;</span><span class="token operator">:</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&#39;2&#39;</span><span class="token operator">:</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>function func(a=1){}</code> \u6700\u521D\u65F6\u521B\u5EFA</li><li><code>let func = function(){}</code> \u6267\u884C\u65F6\u521B\u5EFA</li><li><code>() =&gt;{}</code></li></ul><p><strong>\u8BA1\u5212\u8C03\u7528</strong></p><ul><li><code>setTimeout(func,delay,args...)</code> \u5EF6\u65F6(\u6BEB\u79D2)</li><li><code>setInterval(func,delay,args...)</code> \u91CD\u590D</li><li>\u4F1A\u8FD4\u56DE\u5B9A\u65F6\u5668\u6807\u8BB0\u7B26</li><li><code>clearTimeout(timerId)</code> \u6E05\u9664</li><li>\u5D4C\u5957setTimeout\u5B9E\u73B0\u91CD\u590D\u80FD\u4FDD\u8BC1\u66F4\u52A0\u7CBE\u786E\u7684\u65F6\u95F4 <ul><li><code>setTimeout(function run(){setTimeout(run,100)},100)</code></li></ul></li><li>\u96F6\u5EF6\u65F6\u7684 setTimeout \u5728\u7A0B\u5E8F\u6267\u884C\u5B8C\u540E\u8C03\u7528</li></ul><h2 id="\u8C03\u8BD5\u548C\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u8C03\u8BD5\u548C\u6D4B\u8BD5" aria-hidden="true">#</a> \u8C03\u8BD5\u548C\u6D4B\u8BD5</h2>`,10),f=n("li",null,[n("code",null,"debugger"),s("\u547D\u4EE4 \u7C7B\u4F3C\u65AD\u70B9 \u5F53\u7136\u4E5F\u53EF\u4EE5\u624B\u8C03")],-1),h=n("li",null,[s("\u4F7F\u7528 "),n("code",null,"Eslint"),s(" \u89C4\u8303\u4EE3\u7801\u98CE\u683C")],-1),g=s("\u90A3\u4E9B"),y={href:"https://zh.javascript.info/ninja-code",target:"_blank",rel:"noopener noreferrer"},x=s("\u5FCD\u8005\u4EE3\u7801"),w=e("<li>\u4F7F\u7528 <code>Mocha</code> \u8FDB\u884C\u81EA\u52A8\u5316\u6D4B\u8BD5 <ol><li><code>describe(&#39;title&#39;, ()=&gt;{})</code></li><li><code>it(&#39;content&#39;,()=&gt;{})</code></li><li><code>assert.equal(func(...arg), result)</code><ul><li>(\u4E25\u683C)(\u4E0D)\u76F8\u7B49 \u68C0\u67E5NaN True false \u7B49\u7B49</li></ul></li><li><code>before/after(()=&gt;{})</code></li><li><code>beforeEach/afterEach(()=&gt;{})</code></li></ol></li>",1),_=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">pow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token operator">**</span>y

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;pow&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;2 ^ 3 is 8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;3 ^ 4 is 81&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">makeTest</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> expected <span class="token operator">=</span> x <span class="token operator">*</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ^ 3 is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expected<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> expected<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> x <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">makeTest</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u5B57\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u5B57\u7C7B\u578B</h2><ul><li>\u6570\u5B57\u5199\u6CD5 <ul><li><code>7_300_000_000</code> <code>7.3e9</code> <code>1e-6</code></li><li><code>0xff</code> <code>0b1111</code> <code>0o377</code></li><li><ul><li><code>num.toString(\u8FDB\u52362-36)</code> <code>255..toString(16)</code></li></ul></li></ul></li><li>\u820D\u5165 <ul><li><code>Math.floor/ceil/round/trunc</code></li><li><code>Math.round(num*100)/1000</code> <code>+num.toFixed(precision)</code></li></ul></li><li>\u4E00\u4E9B\u51FD\u6570 <ul><li><code>isFinite(num)</code> <code>isNaN(num)</code> \u662F\u5426\u65E0\u9650/\u9519\u8BEF</li><li><code>parseInt(str[,\u8FDB\u5236])</code> <code>parseFloat(str)</code> \u63D0\u53D6\u6570\u5B57</li></ul></li><li>Math <ul><li><code>.random()</code> [0,1)</li><li><code>.max/min()</code></li><li><code>.pow(n,power)</code></li><li>\u4E09\u89D2\u76F8\u5173 \u7565</li></ul></li></ul><h2 id="\u5B57\u7B26\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u7C7B\u578B" aria-hidden="true">#</a> \u5B57\u7B26\u7C7B\u578B</h2><ul><li><code>&#39;&#39; &quot;&quot; \`\`\${}\`\` </code></li><li><code>length</code> \u662F\u4E00\u4E2A\u5C5E\u6027</li><li><code>str[n]</code> <code>for(let i of str){}</code></li><li>\u4E0D\u53EF\u53D8</li><li>\u4E00\u4E9B\u65B9\u6CD5 <ul><li><code>.toUpperCase/toLowerCase()</code> \u5927\u5C0F\u5199</li><li><code>.indexOf(substr[,pos])</code> <code>.lastIndexOf(substr[,pos])</code>\u8FD4\u56DE\u4F4D\u7F6E&amp;-1 <ul><li><code>if(~str.indexOf(c)){}</code> ~n==-(n+1)</li></ul></li><li><code>.includes(substr[,pos])</code> \u6709\u65E0</li><li><code>.starts/endsWith(substr)</code> \u6709\u65E0\u5F00\u5934\u7ED3\u5C3E</li><li><code>.slice(start[,end])</code> \u5207\u7247,\u652F\u6301\u8D1F\u6570</li><li><code>.substring(start[,end])</code> \u5207\u7247,\u652F\u6301start&gt;end</li><li><code>.substr(start[,length])</code> \u7ED9\u957F\u5EA6,\u652F\u6301\u8D1F\u6570</li><li><code>.codePointAt(pos)</code> <code>String.fromCodePoint(pos)</code> \u67E5\u770B\u4EE3\u7801\u548C\u521B\u5EFA\u5B57\u7B26</li><li><code>.localeCompare(str2)</code> str1-str2\u7684\u987A\u5E8F</li><li><code>.trim()</code> \u5220\u9664\u524D\u540E\u7A7A\u683C</li><li><code>.repeat(n)</code> \u91CD\u590D</li></ul></li></ul><h2 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

list<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;new&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">next</span><span class="token operator">:</span>list<span class="token punctuation">}</span> <span class="token comment">//\u52A0\u5230\u5F00\u5934</span>
list<span class="token punctuation">.</span>next<span class="token operator">=</span>list<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token comment">//\u5220\u9664</span>
list<span class="token punctuation">.</span>next<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">next</span><span class="token operator">:</span>list<span class="token punctuation">.</span>next<span class="token punctuation">}</span> <span class="token comment">//\u52A0\u4E00\u4E2A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u52A0<code>prev</code> <code>tail</code>\u5C5E\u6027\u5F80\u524D\u6216\u5230\u6700\u540E</p><h2 id="rest-spread" tabindex="-1"><a class="header-anchor" href="#rest-spread" aria-hidden="true">#</a> Rest &amp; Spread</h2><ul><li><code>function(a,b,...args){}</code></li><li><code>arguments</code> \u5305\u542B\u6240\u6709\u53C2\u6570\u7684\u7C7B\u6570\u7EC4 \u7BAD\u5934\u51FD\u6570\u4E0D\u652F\u6301</li><li><code>...arr</code> \u6570\u7EC4\u8F6C\u53C2\u6570 \u652F\u6301\u53EF\u8FED\u4EE3\u5BF9\u8C61</li><li><code>let copy = {...obj}/[...arr]</code> \u6D45\u62F7\u8D1D</li></ul><h2 id="\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305" aria-hidden="true">#</a> \u95ED\u5305</h2><blockquote><p>\u95ED\u5305 \u662F\u6307\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u8BB0\u4F4F\u5176\u5916\u90E8\u53D8\u91CF\u5E76\u53EF\u4EE5\u8BBF\u95EE\u8FD9\u4E9B\u53D8\u91CF,\u5728js\u4E2D\uFF0C\u6240\u6709\u51FD\u6570\u90FD\u662F\u95ED\u5305\u7684,\u6240\u6709\u51FD\u6570\u90FD\u6709\u540D\u4E3A<code>[[Environment]]</code>\u7684\u9690\u85CF\u5C5E\u6027,\u8BE5\u5C5E\u6027\u4FDD\u5B58\u4E86\u5BF9\u521B\u5EFA\u8BE5\u51FD\u6570\u7684\u8BCD\u6CD5\u73AF\u5883\u7684\u5F15\u7528\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">makeCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token function">makeCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>var</code>\u53EA\u6709\u51FD\u6570\u4F5C\u7528\u57DF\u548C\u5168\u5C40\u4F5C\u7528\u57DF,\u53EF\u4EE5\u91CD\u590D\u58F0\u660E,\u6709\u53D8\u91CF\u63D0\u5347</p><h2 id="\u6DF1\u5165\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5165\u51FD\u6570" aria-hidden="true">#</a> \u6DF1\u5165\u51FD\u6570</h2><p><strong>\u51FD\u6570\u51B7\u77E5\u8BC6</strong></p><ul><li>\u51FD\u6570\u662F\u5BF9\u8C61 <ul><li>\u5C5E\u6027 <code>name</code> <code>length</code></li><li>\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5C5E\u6027</li></ul></li><li><code>let func1 = function fun2(){}</code> fun2\u4E3A\u5185\u90E8\u51FD\u6570\u540D</li><li><code>new Function(&#39;a&#39;,&#39;b&#39;,&#39;return a+b&#39;)</code> \u5B57\u7B26\u4E32\u8F6C\u51FD\u6570 \u53EA\u80FD\u8BBF\u95EE\u5168\u5C40\u53D8\u91CF</li></ul><p><strong>\u7F13\u5B58\u88C5\u9970\u5668</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">slow</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u53EF\u80FD\u4F1A\u6709\u91CD\u8D1F\u8F7D\u7684 CPU \u5BC6\u96C6\u578B\u5DE5\u4F5C</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Called with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">cachingDecorator</span><span class="token punctuation">(</span><span class="token parameter">func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//\u53EA\u80FD\u7F13\u5B58\u5355\u53C2\u6570</span>
      <span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//let result = func(x)</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span>

    cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

slow <span class="token operator">=</span> <span class="token function">cachingDecorator</span><span class="token punctuation">(</span>slow<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>call/apply</strong></p><ul><li><code>func(args)</code>-&gt;<code>fun.call(obj,args)</code> \u628A\u91CC\u9762\u7684this\u6307\u5411obj <ul><li><code>[].join.call(arrLike)</code> \u5BF9\u7C7B\u6570\u7EC4\u4F7F\u7528join</li></ul></li><li><code>func.call(obj,...args)</code> -&gt; <code>func.apply(obj,args)</code> args\u4E3A\u7C7B\u6570\u7EC4 <ul><li><code>let func2 = function(){return func.apply(this,args)}</code> \u547C\u53EB\u8F6C\u79FB</li></ul></li></ul><p><strong>\u51FD\u6570\u7ED1\u5B9A</strong></p><p>\u5F53\u5C06\u5BF9\u8C61\u65B9\u6CD5\u4F5C\u4E3A\u56DE\u8C03\u8FDB\u884C\u4F20\u9012\u662F\u4F1A\u51FA\u73B0\u4E22\u5931 this \u7684\u95EE\u9898</p><blockquote><p>\u6211\u5E38\u5E38\u559C\u6B22\u628A\u5BF9\u8C61\u60F3\u8C61\u6210\u4E00\u4E2A\u6587\u4EF6\u5939,\u5C5E\u6027\u60F3\u8C61\u6210\u6570\u636E,\u65B9\u6CD5\u60F3\u8C61\u6210exe,\u90A3\u4E48\u5728\u8FD9\u91CC\u53EF\u4EE5\u7406\u89E3\u6210\u5355\u5355\u628Aexe\u6587\u4EF6\u62FF\u8FC7\u53BB\u4E86</p></blockquote><ol><li><code>()=&gt;obj.func()</code> \u4E0D\u8DB3:\u5728\u89E6\u53D1\u524D\u5BF9\u8C61\u53D1\u751F\u53D8\u5316\u65F6</li><li>\u51FD\u6570\u5185\u5EFA\u65B9\u6CD5 <code>let fun2 = func.bind(obj)</code> \u7528\u4E8E\u628Athis\u8F6C\u8BBE\u4E3Aobj</li></ol><p>\u504F\u51FD\u6570(\u7ED1\u5B9A\u53C2\u6570)</p><ul><li><code>let mul = (a,b)=&gt;a*b</code></li><li><code>let double = nul.bind(null,2)</code></li><li><code>double(3)</code> 6</li></ul>`,27),j=e(`<p><strong>\u7BAD\u5934\u51FD\u6570</strong></p><ul><li>\u5E38\u7528\u4E8E\u4E0D\u60F3\u79BB\u5F00\u5F53\u524D\u4E0A\u4E0B\u6587\u7684\u60C5\u51B5</li><li>\u6CA1\u6709this</li><li>\u6CA1\u6709arguments</li><li>\u4E0D\u80FDnew</li><li>\u6CA1\u6709super</li></ul><h2 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h2><ul><li>\u6355\u83B7\u9519\u8BEF\u800C\u4E0D\u662F\u505C\u6B62\u8FD0\u884C</li><li><code>try {...}catch[(err)]{...}</code> \u53EF\u4EE5\u6CA1\u6709 <code>(err)</code><ol><li>\u6267\u884C<code>try{...}</code>\u91CC\u9762\u4EE3\u7801</li><li>\u6CA1\u9519\u8BEF\u5C31\u5FFD\u7565<code>catch(err){...}</code></li><li>\u51FA\u73B0\u9519\u8BEF\u5C31\u505C\u6B62\u6267\u884C \u8F6C\u5411<code>catch</code> \u5FFD\u7565\u5269\u4E0B\u7684<code>try</code></li><li>\u53D8\u91CFerr\u4E3A\u4E00\u4E2Aerror\u5BF9\u8C61</li></ol></li><li>\u65E0\u6548 <ul><li>\u8BED\u6CD5\u9519\u8BEF\u65E0\u6548</li><li><code>try</code>\u91CC\u9762\u5F02\u6B65\u6267\u884C\u7684\u9519\u8BEF\u65E0\u6548</li></ul></li><li>Error \u5BF9\u8C61 <ul><li>name \u9519\u8BEF\u540D\u79F0</li><li>message \u8BE6\u7EC6\u63CF\u8FF0</li><li>stack \u5F53\u524D\u7684\u8C03\u7528\u6808</li></ul></li><li>throw \u64CD\u4F5C\u7B26 <ul><li>new Error(message)</li><li>new SyntaxError(message)</li><li>new ReferenceError(message)</li><li>...</li></ul></li><li>\u6355\u83B7\u540E\u53EF\u4EE5\u518D\u6B21\u629B\u51FA \u7528 instanceof \u68C0\u9A8C <ul><li><code>if (!(err instanceof SyntaxError)) {throw err}</code></li></ul></li><li>try...[catch...]finally \u53EF\u4EE5\u6CA1\u6709catch <ul><li>finally \u65E0\u8BBA\u51FA\u73B0\u4EC0\u4E48\u60C5\u51B5\u4E0B\u90FD\u4F1A\u6267\u884C</li><li><code>function func(){try{return 1}finally{alert(&#39;ok&#39;)}}</code></li></ul></li><li>\u5168\u5C40catch <ul><li><code>window.onerror = function(message, url, line, col, error) {}</code></li><li><code>process.on(&quot;uncaughtException&quot;)</code> node.js</li></ul></li><li>\u81EA\u5B9A\u4E49Error <ul><li>\u5305\u88C5\u5F02\u5E38 \u7565</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">ValidationError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
    <span class="token comment">// this.name = &quot;ValidationError&quot;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;Whoops!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Whoops!</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ValidationError</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),q={__name:"fundamentals.html",setup(E){function l(){let t=((a,c)=>a*c).bind(null,2);alert(t(3))}return(p,t)=>{const a=u("ExternalLinkIcon");return r(),d("div",null,[k,n("p",null,[n("a",v,[m,o(a)])]),b,n("ol",null,[f,h,n("li",null,[g,n("a",y,[x,o(a)])]),w]),_,n("p",null,[n("button",{onClick:l},"run them")]),j])}}},C=i(q,[["__file","fundamentals.html.vue"]]);export{C as default};
