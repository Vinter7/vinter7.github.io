import{_ as t,r as e,o,c as p,a as n,b as c,d as s,e as l}from"./app.d5c6f758.js";const i={},u=n("h1",{id:"others",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#others","aria-hidden":"true"},"#"),s(" Others")],-1),r={href:"https://zh.javascript.info/",target:"_blank",rel:"noopener noreferrer"},d=s("\u53C2\u8003"),k=l(`<hr><h2 id="generator" tabindex="-1"><a class="header-anchor" href="#generator" aria-hidden="true">#</a> Generator</h2><ul><li>generator \u53EF\u4EE5\u6309\u9700\u4E00\u4E2A\u63A5\u4E00\u4E2A\u5730\u8FD4\u56DE\uFF08\u201Cyield\u201D\uFF09\u591A\u4E2A\u503C,\u53EF\u4E0E iterable \u914D\u5408\u4F7F\u7528\uFF0C\u4ECE\u800C\u521B\u5EFA\u6570\u636E\u6D41 <ul><li><code>function* gen(){yield 1;yield 2;return 3}</code></li><li>\u8C03\u7528\u65F6\u8FD4\u56DE\u4E00\u4E2A<code>Generator</code> \u5BF9\u8C61</li><li>\u8C03\u7528<code>.next()</code>\u65B9\u6CD5\u65F6\u8FD0\u884C\u5230\u4E0B\u4E00\u4E2A<code>yield</code>\u5E76\u8FD4\u56DE\u7ED3\u679C<code>{value,done:false}</code></li><li>\u5F53\u8FD0\u884C\u5230<code>return</code>\u65F6 <code>{value,done:true}</code></li></ul></li><li>\u53EF\u8FED\u4EE3(for...of) <ul><li><code>for(let value of gen())){...}</code> (\u4E0D\u5305\u542Breturn\u503C)</li><li><code>let arr = [...gen()]</code> (1,2)</li><li><code>*[Symbol.iterator](){for(let i = this.from; value &lt;= this.to; value++)yeild i}</code> \u521B\u5EFA\u53EF\u8FED\u4EE3\u5BF9\u8C61</li></ul></li><li>\u7EC4\u5408 <code>yield*</code></li><li>\u8F93\u5165\u503C <code>gen().next(arg)</code><ul><li>\u4E0B\u4E00\u6B21<code>next(arg)</code>\u65F6 arg\u4F5C\u4E3Ayeild\u7684\u7ED3\u679C</li><li>\u5B9E\u73B0\u4EA4\u4E92\u6548\u679C</li><li>\u8F93\u5165\u9519\u8BEF <code>.throw(new Error(message))</code></li></ul></li><li><code>.return(arg)</code> \u76F4\u63A5\u5B8C\u6210\u5E76\u8FD4\u56DEarg</li></ul><br><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u7EC4\u5408</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">genRange</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">genRange</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0..9</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">genRange</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// A..Z</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">genRange</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// a..z</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> code <span class="token keyword">of</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  str <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0..9A..Za..z</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u8F93\u5165</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ask1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token string">&quot;2 + 2 = ?&quot;</span><span class="token punctuation">;</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>ask1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
  <span class="token keyword">let</span> ask2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token string">&quot;3 * 3 = ?&quot;</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>ask2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> generator <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span> generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;2 + 2 = ?&quot;</span>
<span class="token function">alert</span><span class="token punctuation">(</span> generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;3 * 3 = ?&quot;</span>
<span class="token function">alert</span><span class="token punctuation">(</span> generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u629B\u51FA\u9519\u8BEF</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token string">&quot;2 + 2 = ?&quot;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u663E\u793A\u8FD9\u4E2A error</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value
<span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><strong>\u5F02\u6B65\u8FED\u4EE3</strong></p><ul><li>\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61 (\u503C\u662F\u4EE5\u5F02\u6B65\u7684\u5F62\u5F0F\u51FA\u73B0)</li><li>\u63D0\u4F9B iterator \u7684\u5BF9\u8C61\u65B9\u6CD5 <code>Symbol.asyncIterator</code></li><li><code>next()</code> \u8FD4\u56DE <code>Promise</code> (resolve\u7684{value,done})</li><li>\u5FAA\u73AF\u5217\u4E3E <code>for await (let i of iter){...}</code></li><li><code>[...iter]</code> \u5931\u6548</li><li>\u6784\u9020\u4E00\u4E2A\u5F02\u6B65\u8FED\u4EE3\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> range <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>

  <span class="token comment">// \u8FD9\u4E00\u884C\u7B49\u4EF7\u4E8E [Symbol.asyncIterator]: async function*()</span>
  async <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>from<span class="token punctuation">;</span> value <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to<span class="token punctuation">;</span> value<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u7B49\u4E00\u79D2</span>
      <span class="token keyword">yield</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> range<span class="token punctuation">)</span> <span class="token function">alert</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="module" tabindex="-1"><a class="header-anchor" href="#module" aria-hidden="true">#</a> Module</h2><ul><li>ES6 \u8BED\u8A00\u7EA7\u6A21\u5757\u7CFB\u7EDF</li><li>\u542F\u7528 <ul><li><code>&lt;script type=&#39;module&#39;&gt;</code> <code>this</code>\u4E3A<code>undefined</code></li><li><code>{&quot;type&quot;: &quot;module&quot;,}</code> in <code>package.json</code></li></ul></li><li><code>i<wbr>mport.meta</code> \u5BF9\u8C61\u5305\u542B\u5173\u4E8E\u5F53\u524D\u6A21\u5757\u7684\u4FE1\u606F</li><li>\u4F7F\u7528\u6784\u5EFA\u5DE5\u5177\u4F1A\u8F7B\u677E\u4E0D\u5C11</li><li>\u9759\u6001\u5BFC\u5165 <ul><li>\u547D\u540D\u5BFC\u51FA \u548C \u9ED8\u8BA4\u5BFC\u51FA</li><li><code>default</code> \u4F5C\u540D\u79F0</li><li><code>export {default as name,others} from &#39;./m.js&#39;</code> \u91CD\u65B0\u5BFC\u51FA</li></ul></li><li>\u52A8\u6001\u5BFC\u5165 (\u4E0D\u7528<code>type=&#39;module&#39;</code>) <ul><li><code>import(&#39;./m.js&#39;)</code> \u8FD4\u56DE\u4E00\u4E2Apromise resolve\u4E3A\u5305\u542B\u6240\u6709\u5BFC\u51FA\u7684\u5BF9\u8C61</li><li>\u7279\u6B8A\u7528\u6CD5 \u5E76\u975E\u51FD\u6570</li><li><code>let {default:name,others} = await import(&#39;./m.js&#39;)</code></li></ul></li></ul><br><table><thead><tr><th style="text-align:center;"></th><th>\u5BFC\u51FA</th><th>\u5BFC\u5165</th></tr></thead><tbody><tr><td style="text-align:center;">\u5BFC\u5165\u4EE3\u7801<br><code>{code}</code></td><td><code>console.log(&#39;ok&#39;)</code></td><td><code>import &#39;./m.js&#39;</code></td></tr><tr><td style="text-align:center;">\u58F0\u660E\u524D\u5BFC\u51FA</td><td><code>export let i = ...</code></td><td><code>import { i [as ii] } from &#39;./m.js&#39;</code></td></tr><tr><td style="text-align:center;">\u58F0\u660E\u540E\u5BFC\u51FA</td><td><code>export {arr,func}</code></td><td><code>import { arr,func } from &#39;./m.js&#39;</code></td></tr><tr><td style="text-align:center;">\u5168\u90E8\u5BFC\u5165</td><td>\u540C\u4E0A</td><td><code>import * as obj from &#39;./m.js&#39;</code></td></tr><tr><td style="text-align:center;">\u9ED8\u8BA4\u5BFC\u51FA</td><td><code>export default anydata</code></td><td><code>import name from &#39;./m.js&#39; </code></td></tr><tr><td style="text-align:center;"><code>default</code><br>\u540D\u79F0</td><td><code>export {f as default}</code></td><td><code>import {default as name} from &#39;./m.js&#39; </code></td></tr><tr><td style="text-align:center;">\u52A8\u6001\u5BFC\u5165</td><td>\u540C\u4E0A</td><td><code>let {default:name,others} = await import(&#39;./m.js&#39;)</code></td></tr></tbody></table>`,15);function m(v,b){const a=e("ExternalLinkIcon");return o(),p("div",null,[u,n("p",null,[n("a",r,[d,c(a)])]),k])}const y=t(i,[["render",m],["__file","others.html.vue"]]);export{y as default};
